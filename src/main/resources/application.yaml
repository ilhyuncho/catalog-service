server:
  port: 9001
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5


spring:
  application:
    name: catalog-service
  config:
    import: "optional:configserver:"  # 가능하면 컨피그 설버에서 설정 데이터를 가져온다
  cloud:
    config:
      uri: http://localhost:8888    # 설정 서버의 url
      request-connect-timeout: 5000   # 설정 서버에 연결될 때까지 기다리는 시간 (밀리초)
      request-read-timeout: 5000  # 설정 서버에서 설정 데이터를 읽을 때까지 기다리는 시간

      fail-fast: false    # 설정 서버 연결 실패를 치명적 오류로 인식 ( 재시도 작동은 true일떄만 활성화 )
      retry:
        max-attempts: 6
        initial-interval: 1000 # 최초 재시도 지연 시간 ( 다시 연결까지 지연하는 시간 )
        max-interval: 2000 # 재시도 지연 최대 시간
        multiplier: 1.1 # 지연 시간 계산 승수
  datasource:
    username: user
    password: abcd1234
    url: jdbc:postgresql://localhost:5432/polardb_catalog
    hikari:
      connection-timeout: 2000  # 풀에서 연결 객체를 얻기 위해 기다려야 하는 최대 시간
      maximum-pool-size: 5
#  sql:   # 플라이웨이 이용에 따라 삭제 처리
#    init:
#      mode: always  #스프링 데이터가 schema.sql파일을 로드

management:
  endpoints:
    web:
      exposure:
        include: refresh



polar:
  greeting: Welcome the the local book catalog!

  testdata2:
    enabled: true

